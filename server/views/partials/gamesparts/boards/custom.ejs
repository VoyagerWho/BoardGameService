<div class="layout">
    <%= JSON.stringify(locals.board) %>
</div>
<script>
    const <%= 'tiles' + locals.index %> =[];
    const <%= 'layout' + locals.index %> = JSON.parse(document.getElementById('board:<%= locals.index %>').getElementsByClassName('layout')[0].innerText);
    if (<%= 'layout' + locals.index %>.background.image) {
        let background = {};
    }
    if (<%= 'layout' + locals.index %>.background.color) {
        document.getElementById('board:<%= locals.index %>').getElementsByClassName('canvas')[0].style.backgroundColor = <%= 'layout' + locals.index %>.background.color;
    }
    async function loadImages<%= locals.index %> () {
        const promiseArray = [];
        <%= 'layout' + locals.index %>.textures.forEach((imageUrl, index) => {
            promiseArray.push(new Promise(resolve => {
                <%='tiles' + locals.index %>.push(new Image());
                <%='tiles' + locals.index %> [index].onload = () => {
                    resolve();
                };

                <%='tiles' + locals.index %> [index].src = imageUrl;
            }));
        });
        if (<%= 'layout' + locals.index %>.background.image) {
            promiseArray.push(new Promise(resolve => {
                background = new Image();
                background.onload = () => {
                    resolve();
                };
                background.src = <%= 'layout' + locals.index %>.background.image;
            }));
        }
        await Promise.all(promiseArray);
        console.log("all images loaded");
        update();
    }
    <%= 'loadImages' + locals.index %> ();
    updateFunctions.push((state) => {
        const tileH = <%=  locals.board.tileHeight %>;
        const tileW = <%=  locals.board.tileWidth %>;
        const boardId = <%= locals.index %>;
        const c = document.getElementById('board:<%= locals.index %>').getElementsByClassName('canvas')[0];
        const ctx = c.getContext('2d');
        const height = c.height;
        const width = c.width;
        ctx.strokeStyle = '#aaaaaa';
        if (<%= 'layout' + locals.index %>.background.image) {
        ctx.drawImage(background, 0, 0, width, height);
    }
        <%= 'layout' + locals.index %>.tiles.forEach((tile, index) => {
        ctx.drawImage(<%='tiles' + locals.index %> [state.boards[boardId][index] || 0], tile.x, tile.y, tileW, tileH);
        ctx.strokeRect(tile.x, tile.y, tileW, tileH);
    });
    });
</script>
<% if (locals.uid !==0) { %>
    <script>
        setupFunctions.push(() => {
            checkClick = (pos) => {
                const tileH = <%=  locals.board.tileHeight %>;
                const tileW = <%=  locals.board.tileWidth %>;
                var clicked = '';
                try {
                    <%= 'layout' + locals.index %>.tiles.forEach((tile) => {
                    if (
                        pos.x >= tile.x &&
                        pos.x <= tile.x + tileW &&
                        pos.y >= tile.y &&
                        pos.y <= tile.y + tileH
                    ) {
                        clicked = tile.name;
                        throw Error('Found tile')
                    }

                });
                } catch (error) {
                    if (error.message !== 'Found tile') {
                        throw error;
                    }

                }

                return clicked;
            }
            document.getElementById('board:<%= locals.index %>').getElementsByClassName('canvas')[0].onclick = (e) => {
                <% if (locals.uid !== 0) { %>
                    if (nextMove === 'choice') {
                        makeMove(checkClick({ x: e.offsetX, y: e.offsetY }), <%= locals.index %>);
                    }
                    else if (nextMove === 'move') {
                        const currentClick = checkClick({ x: e.offsetX, y: e.offsetY });
                        if (lastClick === '') {
                            lastClick = currentClick;
                            document.getElementById('board:<%= locals.index %>').getElementsByClassName('canvas')[0].style.border = '2px solid limegreen';
                        }
                        else if (lastClick === currentClick) {
                            lastClick = '';
                            document.getElementById('board:<%= locals.index %>').getElementsByClassName('canvas')[0].style.border = '2px solid #a0a0a0';
                        }
                        else {
                            makeMove(lastClick + '|' + checkClick({ x: e.offsetX, y: e.offsetY }), <%= locals.index %>);
                            lastClick = '';
                            document.getElementById('board:<%= locals.index %>').getElementsByClassName('canvas')[0].style.border = '2px solid #a0a0a0';
                        }

                    }
                <% } %>
            };
        });
    </script>
    <% } %>
        <canvas class="canvas board" width="<%= locals.board.width %>" height="<%= locals.board.height %>"
            draggable="true">
        </canvas>