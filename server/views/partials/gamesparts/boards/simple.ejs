<div class="layout">
    <%= JSON.stringify(locals.board) %>
</div>
<script>
    const <%='tiles' + locals.index %> =[];
    const <%= 'layout' + locals.index %> = JSON.parse(document.getElementById('board:<%= locals.index %>').getElementsByClassName('layout')[0].innerText);
    async function loadImages<%= locals.index %> () {
        const promiseArray = [];
        <%= 'layout' + locals.index %>.textures.forEach((imageUrl, index) => {
            promiseArray.push(new Promise(resolve => {
                <%='tiles' + locals.index %>.push(new Image());
                <%='tiles' + locals.index %> [index].onload = () => {
                    resolve();
                };
                <%='tiles' + locals.index %> [index].crossOrigin = 'Anonymous';
                <%='tiles' + locals.index %> [index].src = imageUrl;
            }));
        });
        await Promise.all(promiseArray);
        console.log("all images loaded");
        update();
    }
    <%= 'loadImages' + locals.index %> ();

    updateFunctions.push((state) => {
        const nr = <%= 'layout' + locals.index %>.rowCount;
        const nc = <%= 'layout' + locals.index %>.columnCount;
        const tileH = <%= 'layout' + locals.index %>.tileHeight;
        const tileW = <%= 'layout' + locals.index %>.tileWidth;
        const rl = <%= 'layout' + locals.index %>.rowLabels === 'd' ? '1' : 'a';
        const cl = <%= 'layout' + locals.index %>.columnLabels === 'd' ? '1' : 'a';
        const boardId = <%= locals.index %>;
        const c = document.getElementById('board:<%= locals.index %>').getElementsByClassName('canvas')[0];
        const ctx = c.getContext('2d');
        const height = c.height;
        const width = c.width;
        for (var i = 0; i < nr; ++i) {
            for (var j = 0; j < nc; ++j)
                ctx.drawImage(
                    <%='tiles' + locals.index %> [state.boards[boardId][nr * i + j] || 0],
                    j * tileW,
                    i * tileH,
                    tileW,
                    tileH
                );
        }
        ctx.strokeStyle = '#aaaaaa';
        for (var i = 0; i < nr - 1; ++i) {
            ctx.moveTo(0, (i + 1) * tileH);
            ctx.lineTo(width, (i + 1) * tileH);
            ctx.stroke();
        }
        for (var i = 0; i < nc - 1; ++i) {
            ctx.moveTo((i + 1) * tileW, 0);
            ctx.lineTo((i + 1) * tileW, height);
            ctx.stroke();
        }
    });

    setupFunctions.push(() => {
        <% if (locals.uid !== 0) { %>
            document.getElementById('board:<%= locals.index %>').getElementsByClassName('canvas')[0].onclick = function (e) {
                const tileH = <%= 'layout' + locals.index %>.tileHeight;
                const tileW = <%= 'layout' + locals.index %>.tileWidth;
                const rl = <%= 'layout' + locals.index %>.rowLabels === 'd' ? '1' : 'a';
                const cl = <%= 'layout' + locals.index %>.columnLabels === 'd' ? '1' : 'a';
                const offsetX = Math.floor(e.offsetX / tileW);
                const offsetY = Math.floor(e.offsetY / tileH);
                if (nextMove === 'choice') {
                    makeMove(
                        `${String.fromCharCode(cl.charCodeAt(0) + offsetX)}${String.fromCharCode(
                            rl.charCodeAt(0) + offsetY
                        )}`, <%= locals.index %> );
                }
                else if (nextMove === 'move') {
                    const currentClick = `${String.fromCharCode(cl.charCodeAt(0) + offsetX)}${String.fromCharCode(
                        rl.charCodeAt(0) + offsetY
                    )}`;
                    if (lastClick === '') {
                        lastClick = currentClick;
                        document.getElementById('board:<%= locals.index %>').getElementsByClassName('canvas')[0].style.border = '2px solid limegreen';
                    }
                    else if (lastClick === currentClick) {
                        lastClick = '';
                        document.getElementById('board:<%= locals.index %>').getElementsByClassName('canvas')[0].style.border = '2px solid #a0a0a0';
                    }
                    else {
                        makeMove(lastClick + '|' + `${String.fromCharCode(cl.charCodeAt(0) + offsetX)}${String.fromCharCode(
                            rl.charCodeAt(0) + offsetY
                        )}`, <%= locals.index %>);
                        lastClick = '';
                        document.getElementById('board:<%= locals.index %>').getElementsByClassName('canvas')[0].style.border = '2px solid #a0a0a0';
                    }

                }
            };
        <% } %>
    });
</script>
<canvas class="canvas board" width="<%= locals.board.tileWidth*locals.board.columnCount%>"
    height="<%= locals.board.tileHeight*locals.board.rowCount%>">
</canvas>